<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.powernode.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.powernode.domain.SysUser">
    <!--@mbg.generated-->
    <!--@Table sys_user-->
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    user_id, dept_id, user_name, nick_name, user_type, email, phone, sex, avatar, `password`,
    `status`, del_flag, login_ip, login_date, create_by, create_time, update_by, update_time
  </sql>

  <!-- 根据username 和 password查询用户是否存在 -->
  <select id="selectByUsernameAndPassword" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from sys_user
    where user_name=#{username} and password=#{password}
  </select>

  <!-- 根据userId获取menu表中的perms信息 -->
  <select id="getPermissionsByUserId" resultType="java.lang.String">
    select m.perms
    from sys_user_role ur
    inner join sys_role_menu rm
    on ur.role_id=rm.role_id
    inner join sys_menu m
    on rm.menu_id=m.menu_id
    where ur.user_id=#{userId}
  </select>

  <!-- 分页查询用户信息   分页查询返回值是对象，而不是集合！！！ -->
  <select id="getByPage" resultMap="BaseResultMap">
    select *
    from sys_user
    <where>
      del_flag = 0
      <if test="params.userName!=null and params.userName!=''">
        and user_name like concat('%',#{params.userName},'%')
      </if>
      <if test="params.nickName!=null and params.nickName!=''">
        and nick_name like concat('%',#{params.nickName},'%')
      </if>
      <if test="params.status!=null">
        and status=#{params.status}
      </if>
      <if test="params.deptId!=null">
        and dept_id=#{params.deptId}
      </if>
    </where>
  </select>

  <!-- 根据 userName 查询用户 -->
  <select id="selectByUserName" resultMap="BaseResultMap">
    select *
    from sys_user
    where user_name=#{userName} and del_flag=0
  </select>

  <!-- 查询所有普通用户id -->
  <select id="selectAllNomalUserId" resultType="java.lang.Integer">
    select user_id from sys_user
  </select>

  <!-- 获取所有用户信息 -->
  <select id="getAllUser" resultMap="BaseResultMap">
    select * from sys_user
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="com.powernode.domain.SysUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_user (dept_id, user_name, nick_name,
      user_type, email, phone,
      sex, avatar, `password`,
      `status`, del_flag, login_ip,
      login_date, create_by, create_time,
      update_by, update_time)
    values (#{deptId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR},
      #{userType,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{sex,jdbcType=INTEGER}, #{avatar,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER}, #{delFlag,jdbcType=INTEGER}, #{loginIp,jdbcType=VARCHAR},
      #{loginDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="com.powernode.domain.SysUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="loginDate != null">
        login_date,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null">
        #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.powernode.domain.SysUser">
    <!--@mbg.generated-->
    update sys_user
    <set>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null">
        login_date = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.powernode.domain.SysUser">
    <!--@mbg.generated-->
    update sys_user
    set dept_id = #{deptId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      avatar = #{avatar,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=INTEGER},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>


</mapper>
