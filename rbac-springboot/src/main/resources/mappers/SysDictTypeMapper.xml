<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.powernode.mapper.SysDictTypeMapper">
  <resultMap id="BaseResultMap" type="com.powernode.domain.SysDictType">
    <!--@mbg.generated-->
    <!--@Table sys_dict_type-->
    <id column="dict_id" jdbcType="BIGINT" property="dictId" />
    <result column="dict_name" jdbcType="VARCHAR" property="dictName" />
    <result column="dict_type" jdbcType="VARCHAR" property="dictType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    dict_id, dict_name, dict_type, `status`, create_by, create_time, update_by, update_time, 
    remark
  </sql>

  <!-- 分页查询字典类型数据 -->
  <!-- 调用Map集合中的数据，用map.属性   如：params是一个Map集合 -> params.status -->
  <select id="selectSysDictTypeByPage" resultMap="BaseResultMap">
    select *
    from sys_dict_type
    <where>
      <if test="params.dictName!=null and params.dictName!=''">
        dict_name like concat('%',#{params.dictName},'%')
      </if>
      <if test="params.status!=null">
        and status=#{params.status}
      </if>
    </where>
  </select>

  <!--
      根据字典类型获取字典数据
  -->
  <select id="getSysDataByDictType" resultType="com.powernode.domain.SysDictData">
    select *
    from sys_dict_type
    where dict_type=#{dictType}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from sys_dict_type
    where dict_id = #{dictId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from sys_dict_type
    where dict_id = #{dictId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="dict_id" keyProperty="dictId" parameterType="com.powernode.domain.SysDictType" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_dict_type (dict_name, dict_type, `status`, 
      create_by, create_time, update_by, 
      update_time, remark)
    values (#{dictName,jdbcType=VARCHAR}, #{dictType,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="dict_id" keyProperty="dictId" parameterType="com.powernode.domain.SysDictType" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_dict_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dictName != null">
        dict_name,
      </if>
      <if test="dictType != null">
        dict_type,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dictName != null">
        #{dictName,jdbcType=VARCHAR},
      </if>
      <if test="dictType != null">
        #{dictType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.powernode.domain.SysDictType">
    <!--@mbg.generated-->
    update sys_dict_type
    <set>
      <if test="dictName != null">
        dict_name = #{dictName,jdbcType=VARCHAR},
      </if>
      <if test="dictType != null">
        dict_type = #{dictType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where dict_id = #{dictId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.powernode.domain.SysDictType">
    <!--@mbg.generated-->
    update sys_dict_type
    set dict_name = #{dictName,jdbcType=VARCHAR},
      dict_type = #{dictType,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where dict_id = #{dictId,jdbcType=BIGINT}
  </update>


  <select id="getAllDictType" resultMap="BaseResultMap">
    select *
    from sys_dict_type
    <where>
      <if test=" status !=null ">
        status=#{status}
      </if>
    </where>
  </select>


</mapper>